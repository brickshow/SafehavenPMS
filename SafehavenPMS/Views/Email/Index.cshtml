@{
    ViewBag.Title = "Internal Email System";

    // Section to query (use Context.Request in Razor Pages)
    var section = (Context.Request.Query["section"].ToString() ?? "").ToLower();
}

@* Email System Panel *@
<div class="email-container">
    @* Email header panel *@
    <div class="header-panel">
        <button class="btn" id="composeBtn">Compose</button>

        @* header navigation *@
        <nav class="email-navigation g-3">
            <ul class="email-nav-list d-flex flex-row list-unstyled">
                <li class="email-nav-item @(string.IsNullOrEmpty(section) || section == "inbox" ? "active" : "")">
                    <a href="@Url.Action("Index", "Email", new { section = "inbox" })" class="email-nav-link">Inbox</a>
                </li>
                <li class="email-nav-item @(section == "sent" ? "active" : "")">
                    <a href="@Url.Action("Index", "Email", new { section = "sent" })" class="email-nav-link">Sent</a>
                </li>
                <li class="email-nav-item @(section == "archive" ? "active" : "")">
                    <a href="@Url.Action("Index", "Email", new { section = "archive" })" class="email-nav-link">Archive</a>
                </li>
            </ul>
        </nav>
        <hr class="mt-0 mb-2" />
    </div>

    @* Modal for composing a new message *@
    <div id="composeModal" class="modal-overlay" style="display:none;">
        <div class="modal-content">
            <span class="close-modal" id="closeModalBtn">&times;</span>
            <h4>Compose New Message</h4>
            <form>
                <div class="mb-2">
                    <label for="to" class="form-label">To:</label>
                    <input type="text" id="to" class="form-control" placeholder="Email" />
                </div>
                <div class="mb-2">
                    <label for="subject" class="form-label">Subject:</label>
                    <input type="text" id="subject" class="form-control" placeholder="Subject" />
                </div>
                <div class="mb-2">
                    <label for="body" class="form-label">Message:</label>
                    <textarea id="body" class="form-control" rows="4" placeholder="Type your message..."></textarea>
                </div>
                <button type="submit" class="btn btn-primary">Send</button>
            </form>
        </div>
    </div>

    @* Email message container  *@
    <div class="email-msg-container">

        @* Swicth case and load the selected page *@
        @switch (section)
        {
            //if sent seleted load the sent pages
            case "sent": 
                @await Html.PartialAsync("_SentPartial");
                break;
                //This is just a test
            case "archive":
                <div class="email-msg-container">
                    <div class="nothing-follows text-center text-muted mt-3">Archive is empty.</div>
                </div>
                break;
            case "inbox":
            default:

                <div class="email-msg-container">
                    <div class="email-msg-row d-flex align-items-center">
                        <div class="col-md-4 col-12 message-header">From: Brix Lampago</div>
                        <div class="col-md-4 col-12">(no subject)</div>
                        <div class="col-md-3 col-10 text-muted">06/18/2025 - 10:50AM</div>
                        <div class="col-md-1 col-2 text-end message-actions justify-content-center align-items-center">
                            <i class="bx bx-archive"></i>
                            <i class="bx bx-trash"></i>
                        </div>
                    </div>
                    <div class="email-msg-row d-flex align-items-center">
                        <div class="col-md-4 col-12 message-header">From: Brix Lampago</div>
                        <div class="col-md-4 col-12">Project Update</div>
                        <div class="col-md-3 col-10 text-muted">06/18/2025 - 10:50AM</div>
                        <div class="col-md-1 col-2 text-end message-actions">
                            <i class="bx bx-archive"></i>
                            <i class="bx bx-trash"></i>
                        </div>
                    </div>
                    <div class="email-msg-row d-flex align-items-center">
                        <div class="col-md-4 col-12 message-header">From: Brix Lampago</div>
                        <div class="col-md-4 col-12">Check-up Result of John Doe</div>
                        <div class="col-md-3 col-10 text-muted">06/15/2025 - 10:50AM</div>
                        <div class="col-md-1 col-2 text-end message-actions">
                            <i class="bx bx-archive"></i>
                            <i class="bx bx-trash"></i>
                        </div>
                    </div>
                    <div class="email-msg-row d-flex align-items-center">
                        <div class="col-md-4 col-12 message-header">From: Brix Lampago</div>
                        <div class="col-md-4 col-12">Check-up Result of John Doe</div>
                        <div class="col-md-3 col-10 text-muted">06/14/2025 - 10:50AM</div>
                        <div class="col-md-1 col-2 text-end message-actions">
                            <i class="bx bx-archive"></i>
                            <i class="bx bx-trash"></i>
                        </div>
                    </div>
                    <div class="nothing-follows text-center text-muted mt-3">Nothing follows.</div>
                </div>
                break;
        }
      
    </div>
</div>
<style>
    .modal-overlay {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0,0,0,0.4);
        z-index: 1000;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .modal-content {
        bottom:0;
        right:0;
        top:100%;
        left:100%;
        background: #fff;
        padding: 24px 32px;
        border-radius: 8px;
        min-width: 320px;
        max-width: 50%;
        box-shadow: 0 4px 24px rgba(0,0,0,0.15);
    }

    .close-modal {
        position: absolute;
        top: 12px;
        right: 16px;
        font-size: 1.5rem;
        color: #888;
        cursor: pointer;
    }

    .modal-content .form-label {
        font-weight: 500;
        margin-bottom: 4px;
        display: block;
    }

    .modal-content .form-control {
        width: 100%;
        padding: 6px 8px;
        margin-bottom: 10px;
        border: 1px solid #ccc;
        border-radius: 4px;
        font-size: 1rem;
    }

    .modal-content .btn-primary {
        background: #007178;
        color: #fff;
        border: none;
        padding: 8px 18px;
        border-radius: 4px;
        font-weight: 600;
        cursor: pointer;
    }

        .modal-content .btn-primary:hover {
            background: #005f63;
        }
</style>

<script>
     // Show modal when Compose is clicked
    document.addEventListener('DOMContentLoaded', function () {
        var composeBtn = document.getElementById('composeBtn');
        var modal = document.getElementById('composeModal');
        var closeModalBtn = document.getElementById('closeModalBtn');

        composeBtn.addEventListener('click', function () {
            modal.style.display = 'flex';
        });

        closeModalBtn.addEventListener('click', function () {
            modal.style.display = 'none';
        });

        // Optional: close modal when clicking outside the modal content
        modal.addEventListener('click', function (e) {
            if (e.target === modal) {
                modal.style.display = 'none';
            }
        });
    });
</script>
   