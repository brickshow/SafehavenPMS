// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SafehavenPMS.Data;

#nullable disable

namespace SafehavenPMS.Migrations
{
    [DbContext(typeof(SafehavenPMSContext))]
    [Migration("20250712062554_Shasha Laptop")]
    partial class ShashaLaptop
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SafehavenPMS.Models.EducationLevel", b =>
                {
                    b.Property<int>("EducationLevelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EducationLevelId"));

                    b.Property<string>("EducationLevelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EducationLevelId");

                    b.ToTable("EducationLevels");

                    b.HasData(
                        new
                        {
                            EducationLevelId = 1,
                            EducationLevelName = "Primary"
                        },
                        new
                        {
                            EducationLevelId = 2,
                            EducationLevelName = "Secondary"
                        },
                        new
                        {
                            EducationLevelId = 3,
                            EducationLevelName = "Tertiary"
                        },
                        new
                        {
                            EducationLevelId = 4,
                            EducationLevelName = "Postgraduate"
                        });
                });

            modelBuilder.Entity("SafehavenPMS.Models.MaritalStatus", b =>
                {
                    b.Property<int>("MaritalStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaritalStatusId"));

                    b.Property<string>("MaritalStatusType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaritalStatusId");

                    b.ToTable("MaritalStatuses");

                    b.HasData(
                        new
                        {
                            MaritalStatusId = 1,
                            MaritalStatusType = "Single"
                        },
                        new
                        {
                            MaritalStatusId = 2,
                            MaritalStatusType = "Married"
                        },
                        new
                        {
                            MaritalStatusId = 3,
                            MaritalStatusType = "Divorced"
                        },
                        new
                        {
                            MaritalStatusId = 4,
                            MaritalStatusType = "Widowed"
                        });
                });

            modelBuilder.Entity("SafehavenPMS.Models.Patient", b =>
                {
                    b.Property<int>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PatientId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateOfBirth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EducationLevelID")
                        .HasColumnType("int");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaritalStatusID")
                        .HasColumnType("int");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Occupation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatienStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Religion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PatientId");

                    b.HasIndex("EducationLevelID");

                    b.HasIndex("MaritalStatusID");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("SafehavenPMS.Models.PatientCase", b =>
                {
                    b.Property<int>("PatientCaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PatientCaseId"));

                    b.Property<string>("Affilation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CaseNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CaseStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfIntake")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfReferral")
                        .HasColumnType("datetime2");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<string>("ReferredBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.HasKey("PatientCaseId");

                    b.HasIndex("PatientId");

                    b.ToTable("PatientCases");
                });

            modelBuilder.Entity("SafehavenPMS.Models.Patient", b =>
                {
                    b.HasOne("SafehavenPMS.Models.EducationLevel", "EducationLevel")
                        .WithMany("Patients")
                        .HasForeignKey("EducationLevelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SafehavenPMS.Models.MaritalStatus", "MaritalStatus")
                        .WithMany("Patients")
                        .HasForeignKey("MaritalStatusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EducationLevel");

                    b.Navigation("MaritalStatus");
                });

            modelBuilder.Entity("SafehavenPMS.Models.PatientCase", b =>
                {
                    b.HasOne("SafehavenPMS.Models.Patient", "Patient")
                        .WithMany("PatientCases")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("SafehavenPMS.Models.EducationLevel", b =>
                {
                    b.Navigation("Patients");
                });

            modelBuilder.Entity("SafehavenPMS.Models.MaritalStatus", b =>
                {
                    b.Navigation("Patients");
                });

            modelBuilder.Entity("SafehavenPMS.Models.Patient", b =>
                {
                    b.Navigation("PatientCases");
                });
#pragma warning restore 612, 618
        }
    }
}
